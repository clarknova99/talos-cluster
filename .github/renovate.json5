{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:recommended",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":automergeBranch"
  ],
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": ["prEditedNotification", "prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "schedule": ["every weekend"],
  "ignorePaths": ["**/*.sops.*"],
  "flux": {
    "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"]
  },
  "helm-values": {
    "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"]
  },
  "helmfile": {
    "fileMatch": ["(^|/)helmfile\\.ya?ml(?:\\.j2)?$"]
  },
  "kubernetes": {
    "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"]
  },
  "kustomize": {
    "fileMatch": ["(^|/)kustomization\\.ya?ml(?:\\.j2)?$"]
  },
  "pip_requirements": {
    "fileMatch": ["(^|/)[\\w-]*requirements(-\\w+)?\\.(txt|pip)(?:\\.j2)?$"]
  },
  // commit message topics
  "commitMessageTopic": "{{depName}}",
  "commitMessageExtra": "to {{newVersion}}",
  "commitMessageSuffix": "",
  // package rules
  "packageRules": [
    // automerge
    {
      "description": ["Auto merge Github Actions"],
      "matchManagers": ["github-actions"],
      "automerge": true,
      "automergeType": "branch",
      "ignoreTests": true,
      "matchUpdateTypes": ["minor", "patch"]
    },
    // groups
    {
      "description": ["Flux Group"],
      "groupName": "Flux",
      "matchPackagePatterns": ["fluxcd"],
      "matchDatasources": ["docker", "github-tags"],
      "versioning": "semver",
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      },
      "separateMinorPatch": true
    },
    {
      "description": ["Talos Group"],
      "groupName": "Talos",
      "matchPackagePatterns": [
        "siderolabs/talosctl",
        "siderolabs/installer"
      ],
      "matchDatasources": ["docker"],
      "group": {
        "commitMessageTopic": "{{{groupName}}} group"
      },
      "separateMinorPatch": true
    },
    // commit message topics
    {
      "matchDatasources": ["helm"],
      "commitMessageTopic": "chart {{depName}}"
    },
    {
      "matchDatasources": ["docker"],
      "commitMessageTopic": "image {{depName}}"
    },
    // commit messages
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(container)!: "
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "container"
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "container"
    },
    {
      "matchDatasources": ["docker"],
      "matchUpdateTypes": ["digest"],
      "semanticCommitType": "chore",
      "semanticCommitScope": "container"
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(helm)!: "
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "helm"
    },
    {
      "matchDatasources": ["helm"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "helm"
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(github-release)!: "
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "github-release"
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "github-release"
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["major"],
      "commitMessagePrefix": "feat(github-action)!: "
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["minor"],
      "semanticCommitType": "feat",
      "semanticCommitScope": "github-action"
    },
    {
      "matchManagers": ["github-actions"],
      "matchUpdateTypes": ["patch"],
      "semanticCommitType": "fix",
      "semanticCommitScope": "github-action"
    },
    // labels
    {
      "matchUpdateTypes": ["major"],
      "labels": ["type/major"]
    },
    {
      "matchUpdateTypes": ["minor"],
      "labels": ["type/minor"]
    },
    {
      "matchUpdateTypes": ["patch"],
      "labels": ["type/patch"]
    },
    {
      "matchDatasources": ["docker"],
      "addLabels": ["renovate/container"]
    },
    {
      "matchDatasources": ["helm"],
      "addLabels": ["renovate/helm"]
    },
    {
      "matchDatasources": ["github-releases", "github-tags"],
      "addLabels": ["renovate/github-release"]
    },
    {
      "matchManagers": ["github-actions"],
      "addLabels": ["renovate/github-action"]
    }
  ],
  // custom managers
  "customManagers": [
    {
      "customType": "regex",
      "description": ["Process custom dependencies"],
      "fileMatch": ["(^|/)kubernetes/.+\\.ya?ml(?:\\.j2)?$"],
      "matchStrings": [
        // # renovate: datasource=helm depName=cilium repository=https://helm.cilium.io
        // version: 1.15.1
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( repository=(?<registryUrl>\\S+))?\\n.+: (&\\S+\\s)?(?<currentValue>\\S+)"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}"
    }
  ],
  "hostRules": [
    {
      "hostType": "docker",
      "matchHost": "ghcr.io",
      "username": "clarknova99",
      "encrypted": {
        "password": "wcFMA/xDdHCJBTolAQ//VbjJr420j0pEvox/JzczG7kafiH04P/Cc8b1dR5F0fyD2HjSQ2dJSzouCeeMDt6Sg/EQb/6pRCxx3p8sQ0Ndn21fDYXxKN/W1Tcfq0c/1XzXMFcZ7ZEU3f/6KohHdxZE/v6vfbTnSwev1bMlrPw1cdiBGNNa6Xy4yPLItYrKlycoreX9IwvMv/fi9HWPWRk2todBe26AEMid2q1ZGKSbR727n2hgQ3ALFdGxmjzFDPq7UYzaQ6yO+D+JGGiNntfq9fJxwLgjo2MryE+TqhngOd4YySlwF9ryWgQ5wUVxKf33Qtidg1Of46WSfeWvccOEGOCxE3n3a0J6aHuFvN1OWVnDSwAC0TBWnp5jeGoU+hUAwNAjSF2HTPian+WVWLR7kGcZtL3NFNbsqn5Uyfvr/ASVTAZ2s39l5NYBcuLV95Dqba8/vgSQmHEW0rSvmZK6R4UuQF96r9KYixj8BRUk+H6JwjMhKAH2j5vDnTmtsWXcim4dYoBI8qiHMGA9Nl23c1ll2Qb66rcrfllgN0gN3PZ1UBI/ovdJ3qWz4jtqY+gzeBP/dcxg+oCx5LiNxG4C3jZZ7C0TKdanLCtbYWBtQZap18yob0pU2cLaDUeQhSs1z7nkren36X8i0lK1ssBsOd+EGpmorMin8POYWukFmaCCzFZAWmiwqPmi9comjDDSegHoekd3TPBQiPXtpgAT3DXSxDk7iCfsTDBH31uZQaeeDkwlHfehzO79tC32uEKbHzjHO7JDcA9KXve0aeCDKn5SfbJBHjzyL8ujtsnCzp+NyKiwSrmyVE/agAWEiq3UyFnDiTArxSznGzPDz/ZAZaxw7PGU3o0CWZgJ"
      }
    },
    {
      "matchHost": "github.com",
      "token": "{{ secrets.MEND_TOKEN }}"
    }
  ]  
}
