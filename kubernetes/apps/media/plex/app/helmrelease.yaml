---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"
        # pod:
        #   affinity:
        #     nodeAffinity:
        #       requiredDuringSchedulingIgnoredDuringExecution:
        #         nodeSelectorTerms:
        #         - matchExpressions:
        #           - key: plex-target
        #             operator: In
        #             values:
        #             - "true"
              # preferredDuringSchedulingIgnoredDuringExecution:
              # - weight: 1
              #   preference:
              #     matchExpressions:
              #     - key: kubernetes.io/hostname
              #       operator: In
              #       values:
              #       - jupiter
              #       - mars          
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.5.9522-a96edc606@sha256:98a2883445f4901ec816b8dc4d684f94b4a6a21663cf6bde218f274a8c4ef289
              #tag: plexpass
            env:
              # See https://support.plex.tv/articles/201105343-advanced-hidden-server-settings/
              TZ: America/New_York
              ADVERTISE_IP: "https://plex.${SECRET_DOMAIN}:443,http://192.168.3.50:32400"
              ALLOWED_NETWORKS: "192.168.0.0/16,10.69.0.0/16,10.96.0.0/16"
              PLEX_NO_AUTH_NETWORKS: 192.168.1.0/24
              HOSTNAME: plex.${SECRET_DOMAIN}
            # probes:
            #   liveness: &probes
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /identity
            #         port: 32400
            #       initialDelaySeconds: 30
            #       periodSeconds: 10
            #       timeoutSeconds: 1
            #       failureThreshold: 3
            #   readiness: *probes
            #   startup:
            #     enabled: true
            #     spec:
            #       failureThreshold: 30
            #       periodSeconds: 10
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                gpu.intel.com/i915: 1
                # memory: 10Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44, 100, 1025]
        seccompProfile: { type: RuntimeDefault }
      # nodeSelector:
      #   intel.feature.node.kubernetes.io/gpu: "true"

    service:
      app:
        controller: plex
        type: LoadBalancer
        externalTrafficPolicy: Cluster
        annotations:
          io.cilium/lb-ipam-ips: 192.168.3.50
        ports:
          http:
            port: 32400
          # GDM Network discovery
          # https://support.plex.tv/articles/200430283-network/
          # gdm-1-udp:
          #   enabled: true
          #   port: 32410
          #   protocol: UDP
          # gdm-2-udp:
          #   enabled: true
          #   port: 32412
          #   protocol: UDP
          # gdm-3-udp:
          #   enabled: true
          #   port: 32413
          #   protocol: UDP
          # gdm-4-udp:
          #   enabled: true
          #   port: 32414
          #   protocol: UDP
    ingress:
      app:
        enabled: true
        className: external
        annotations:
          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/server-snippet: |
            location ~ ^/library/streams {
              proxy_set_header        Range "";
              proxy_pass              http://plex.media.svc.cluster.local:32400;
              proxy_http_version      1.1;
            }          
          hajimari.io/icon: mdi:plex
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
    persistence:
      config:
        existingClaim: plex
        # existingClaim: plex
        # globalMounts:
        #   - path: /config/Library/Application Support/Plex Media Server          
        # type: nfs
        # server: 192.168.1.2
        # path: /volume1/network-storage/plex
        # globalMounts:
        #   # - path: /config
        #   - path: /config/Library/Application Support/Plex Media Server    
      config-cache:
        existingClaim: plex-cache
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Cache
      config-logs:
        type: emptyDir
        globalMounts:
          - path: /config/Library/Application Support/Plex Media Server/Logs                
      tmp:
        type: emptyDir
      transcode:
        type: emptyDir
      media:
        type: nfs
        server: 192.168.1.3
        path: /volume1/network-storage/Video
        globalMounts:
          - path: /media
