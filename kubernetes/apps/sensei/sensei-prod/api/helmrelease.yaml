---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sensei-prod-api
  namespace: sensei
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      sensei-prod-api:
        replicas: 1
        containers:
          app:
            image:
              repository: ghcr.io/clarknova99/project-sensei/backend
              tag: prod-latest@sha256:1c18dcfb2cc84f8b36c31dfa3aa98037ec53b50f357d479fa480d226881b778b
              pullPolicy: Always
            env:
              GROQ_API_KEY_LLM: ${GROQ_API_KEY_LLM}
              GROQ_API_KEY_PGN_TEXT: ${GROQ_API_KEY_PGN_TEXT} 
              OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
              ENVIRONMENT: prod
              PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.42:5432/sensei-prod
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_DB: 1
              DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
              LICHESS_API_TOKEN: ${LICHESS_API_TOKEN}
              GROQ_API_KEY: ${GROQ_API_KEY_LLM}
              #GROQ_MODEL: llama3-70b-8192
          worker-pgn-to-text:
            image:
              repository: ghcr.io/clarknova99/project-sensei/backend
              tag: prod-latest@sha256:1c18dcfb2cc84f8b36c31dfa3aa98037ec53b50f357d479fa480d226881b778b
              pullPolicy: Always
            command: ["/bin/sh", "-c", "python3 /app/worker_pgn_to_text.py"]
            env:
              GROQ_API_KEY: ${GROQ_API_KEY_PGN_TEXT}
              GROQ_API_KEY_PGN_TEXT: ${GROQ_API_KEY_PGN_TEXT}
              GROQ_MODEL: llama3-70b-8192
              PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.42:5432/sensei-prod
              DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
              OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
              ENVIRONMENT: prod
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_DB: 1
          worker-llm-requests:
            image:
              repository: ghcr.io/clarknova99/project-sensei/backend
              tag: prod-latest@sha256:1c18dcfb2cc84f8b36c31dfa3aa98037ec53b50f357d479fa480d226881b778b
              pullPolicy: Always
            command: ["/bin/sh", "-c", "python3 /app/worker_llm_requests.py"]
            env:
              GROQ_API_KEY: ${GROQ_API_KEY_LLM}
              GROQ_API_KEY_LLM: ${GROQ_API_KEY_LLM}
              GROQ_MODEL: llama3-70b-8192
              PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.42:5432/sensei-prod
              DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
              OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
              ENVIRONMENT: prod
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_DB: 1              
          worker-game-imports:
            image:
              repository: ghcr.io/clarknova99/project-sensei/backend
              tag: prod-latest@sha256:1c18dcfb2cc84f8b36c31dfa3aa98037ec53b50f357d479fa480d226881b778b
              pullPolicy: Always
            command: ["/bin/sh", "-c", "python3 /app/worker_game_import.py"]
            env:
              GROQ_API_KEY: ${GROQ_API_KEY_LLM}
              GROQ_API_KEY_LLM: ${GROQ_API_KEY_LLM}
              GROQ_MODEL: llama3-70b-8192
              PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.42:5432/sensei-prod
              DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
              OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
              ENVIRONMENT: prod
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_DB: 1
        pod:
          # imagePullPolicy: Always
          imagePullSecrets:
            - name: sensei-secret
    service:
      app:
        controller: sensei-prod-api
        ports:
          http:
            port: 3001
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN_TWO}"
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:math-compass
        className: external
        hosts:
          - host: api.${SECRET_DOMAIN_TWO}
            paths:
              - path: /
                service:
                  identifier: app
                  port: 3001
        tls:
          - hosts:
              - api.${SECRET_DOMAIN_TWO}





# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
# apiVersion: helm.toolkit.fluxcd.io/v2
# kind: HelmRelease
# metadata:
#   name: sensei-prod-api
#   namespace: sensei
# spec:
#   interval: 15m
#   chart:
#     spec:
#       chart: app-template
#       version: 3.4.0
#       sourceRef:
#         kind: HelmRepository
#         name: bjw-s
#         namespace: flux-system
#       interval: 15m
#   maxHistory: 3
#   install:
#     remediation:
#       retries: 5
#   upgrade:
#     remediation:
#       retries: 5
#   values:
#     controllers:
#       sensei-prod-api:
#         replicas: 1
#         containers:
#           app:
#             image:
#               repository: ghcr.io/clarknova99/project-sensei/backend
#               tag: main-0.1.0@sha256:28a3b65776a4b283bce665948b794ace41b7831c58119aece1ee8a25fac2f00e
#               pullPolicy: Always
#             env:
#               GROQ_API_KEY: ${SECRET_GROQ_API_KEY}
#               GROQ_MODEL: llama3-70b-8192
#               PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.41:5432/sensei-prod
#               DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
#               ENVIRONMENT: Production
#               OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
#         pod:
#           # imagePullPolicy: Always
#           imagePullSecrets:
#             - name: sensei-secret
#     service:
#       app:
#         controller: sensei-prod-api
#         ports:
#           http:
#             port: 3001
#     ingress:
#       app:
#         annotations:
#           external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN_TWO}"
#           hajimari.io/enable: "true"
#           hajimari.io/icon: mdi:math-compass
#         className: external
#         hosts:
#           - host: api.${SECRET_DOMAIN_TWO}
#             paths:
#               - path: /
#                 service:
#                   identifier: app
#                   port: 3001
#         tls:
#           - hosts:
#               - api.${SECRET_DOMAIN_TWO}
