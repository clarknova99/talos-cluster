---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sensei-dev-api
  namespace: sensei
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 2
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      sensei-dev-api:
        replicas: 1
        containers:
          app:
            image:
              repository: ghcr.io/clarknova99/project-sensei/backend
              tag: dev-latest@sha256:bd50b136b51ddc3c6cc500dbc13d976fa21f739e3f131ca48501be143599c989
              pullPolicy: Always
            env:
              SENSEI_API_KEY: ${SECRET_SENSEI_API_KEY}
              GROQ_API_KEY_LLM: ${GROQ_API_KEY_LLM}
              GROQ_API_KEY_PGN_TEXT: ${GROQ_API_KEY_PGN_TEXT}
              OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
              SENSEI_OPENAI_API_KEY: ${SECRET_SENSEI_OPENAI_KEY}
              ENVIRONMENT: dev
              PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@postgres16vector-rw.database.svc.cluster.local:5432/sensei-dev
              DISCORD_WEBHOOK: ${SECRET_SENSEI_DISCORD_WEBHOOK}
              DISCORD_SIGNUP_WEBHOOK: ${SECRET_DISCORD_SIGNUP_WEBOOK}
              LICHESS_API_TOKEN: ${LICHESS_API_TOKEN}
              GROQ_API_KEY: ${GROQ_API_KEY_LLM}
              STOCKFISH_PATH: /usr/games/stockfish
              LANGFUSE_PUBLIC_KEY: ${SECRET_LANGFUSE_PUBLIC_KEY}
              LANGFUSE_SECRET_KEY: ${SECRET_LANGFUSE_SECRET_KEY}
              LANGFUSE_HOST: http://langfuse-v3-web.sensei.svc.cluster.local:3000
              LITELLM_BASE_URL: http://litellm.sensei.svc.cluster.local:4000
              LITELLM_API_KEY: ${SECRET_LITELLM_API_KEY}
              GOOGLE_TTS_API_KEY: ${SECRET_SENSEI_GEMINI_KEY}
              FRONTEND_BASE_URL: https://dev.${SECRET_DOMAIN_TWO}
              EMAIL_VERIFICATION_TOKEN_EXPIRES_HOURS: 24
              SENDER_EMAIL: ${SECRET_SENSEI_SENDER_EMAIL}
              SMTP_SENDER_NAME: ${SECRET_SENSEI_SMTP_SENDER_NAME}
              GMAIL_SERVICE_ACCOUNT_FILE: ${SECRET_SENSEI_GMAIL_SERVICE_ACCOUNT_FILE}
              MAILJET_API_KEY: ${SECRET_MAIL_USERNAME}
              MAILJET_API_SECRET: ${SECRET_MAIL_PASSWORD}
              AWS_ACCESS_KEY_ID: ${SECRET_SENSEI_AWS_ACCESS_KEY_ID}
              AWS_SECRET_ACCESS_KEY: ${SECRET_SENSEI_AWS_SECRET_ACCESS_KEY}
              AWS_S3_BUCKET_NAME: ${SECRET_SENSEI_AWS_S3_BUCKET_NAME}
              AWS_REGION_NAME: ${SECRET_SENSEI_AWS_REGION_NAME}
              AWS_S3_REGION: ${SECRET_SENSEI_AWS_S3_REGION}
              STRIPE_PUBLISHABLE_KEY: ${SECRET_SENSEI_STRIPE_TEST_PUBLISHABLE_KEY}
              STRIPE_SECRET_KEY: ${SECRET_SENSEI_STRIPE_TEST_SECRET_KEY}
              STRIPE_WEBHOOK_SIGNING_SECRET: ${SECRET_SENSEI_STRIPE_TEST_WEBHOOK_SIGNING_SECRET}
              CLOUDFLARE_TURNSTILE_SECRET_KEY: ${SECRET_SENSEI_CLOUDFLARE_TURNSTILE_SECRET_KEY}
        pod:
          # imagePullPolicy: Always
          imagePullSecrets:
            - name: sensei-secret
    defaultPodOptions:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: NotIn
                    values: ["mars"]
    service:
      app:
        controller: sensei-dev-api
        type: LoadBalancer
        annotations:
          io.cilium/lb-ipam-ips: 192.168.3.38
        ports:
          http:
            port: 3001
