---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app authentik
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.6.3
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      deploymentAnnotations:
        secret.reloader.stakater.com/reload: "authentik-secret"
      storageClass: ceph-block
      envFrom:
        - secretRef:
            name: authentik-secret
    authentik:
      log_level: info
      avatars: "gravatar,initials"
      email:
        host: ${SECRET_MAIL_HOST}
        # -- SMTP credentials. When left empty, no authentication will be done.
        username: "${SECRET_MAIL_USERNAME}"
        # -- SMTP credentials. When left empty, no authentication will be done.
        password: "${SECRET_MAIL_PASSWORD}"        
        port: 587
        from: "Big Man <bigman@${SECRET_DOMAIN_TWO}>"
      error_reporting:
        enable: false
        send_pii: false
      redis:
        host: dragonfly.database.svc.cluster.local
        db: 1        
      outposts:
        container_image_base: ghcr.io/goauthentik/%(type)s:%(version)s
      # https://github.com/goauthentik/authentik/pull/7118
      # https://github.com/goauthentik/authentik/issues/1285
      #redis:
      #  host: "redis-headless.database.svc.cluster.local"
    server:
      initContainers:
        - name: init-db
          image: ghcr.io/onedr0p/postgres-init:16.3
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: authentik-secret
      metrics:
        serviceMonitor:
          enabled: true
      ingress:
        enabled: true
        ingressClassName: external
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN_TWO}"
        hosts:
          - auth.${SECRET_DOMAIN_TWO}
        paths:
          - /
        tls:
          - hosts:
              - auth.${SECRET_DOMAIN_TWO}
    geoip:
      enabled: false
      existingSecret:
        secretName: "authentik-secret"
        accountId: "MAXMIND_ACCOUNT_ID"
        licenseKey: "MAXMIND_LICENSE_KEY"
    prometheus:
      rules:
        enabled: true
    postgresql:
      enabled: false
    redis:
      enabled: false