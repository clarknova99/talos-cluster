---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sensei-stage-api
  namespace: sensei
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      sensei-stage-api:
        replicas: 1
        containers:
          app:
            image:
              repository: ghcr.io/clarknova99/project-sensei/backend
              tag: stage-latest@sha256:02c0e1611b6ae18b8c9dc31e50c3e72654d4d8f3aa70ed5fed254953e3f42e29
              pullPolicy: Always
            env:
              GROQ_API_KEY_LLM: ${GROQ_API_KEY_LLM}
              GROQ_API_KEY_PGN_TEXT: ${GROQ_API_KEY_PGN_TEXT}
              OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
              ENVIRONMENT: stage
              PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.42:5432/sensei-stage
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_DB: 0
              DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
              LICHESS_API_TOKEN: ${LICHESS_API_TOKEN}
              GROQ_API_KEY: ${GROQ_API_KEY_LLM}
              STOCKFISH_PATH: /usr/games/stockfish
              #GROQ_MODEL: llama3-70b-8192
          worker-game-processing:
            image:
              repository: ghcr.io/clarknova99/project-sensei/backend
              tag: stage-latest@sha256:02c0e1611b6ae18b8c9dc31e50c3e72654d4d8f3aa70ed5fed254953e3f42e29
              pullPolicy: Always
            command: ["/bin/sh", "-c", "python3 /app/worker_game_processing.py"]
            env:
              GROQ_API_KEY: ${GROQ_API_KEY_PGN_TEXT}
              GROQ_API_KEY_PGN_TEXT: ${GROQ_API_KEY_PGN_TEXT}
              GROQ_MODEL: llama3-70b-8192
              PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.42:5432/sensei-stage
              DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
              OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
              ENVIRONMENT: stage
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_DB: 0
          # worker-pgn-to-text:
          #   image:
          #     repository: ghcr.io/clarknova99/project-sensei/backend
          #     tag: stage-latest@sha256:d1e9b0314065bc139b49c5f246b95698055cce305ef8e9e34d653094522548c1
          #     pullPolicy: Always
          #   command: ["/bin/sh", "-c", "python3 /app/worker_pgn_to_text.py"]
          #   env:
          #     GROQ_API_KEY: ${GROQ_API_KEY_PGN_TEXT}
          #     GROQ_API_KEY_PGN_TEXT: ${GROQ_API_KEY_PGN_TEXT}
          #     GROQ_MODEL: llama3-70b-8192
          #     PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.42:5432/sensei-stage
          #     DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
          #     OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
          #     ENVIRONMENT: stage
          #     REDIS_HOST: dragonfly.database.svc.cluster.local
          #     REDIS_DB: 0
          # worker-llm-requests:
          #   image:
          #     repository: ghcr.io/clarknova99/project-sensei/backend
          #     tag: stage-latest@sha256:d1e9b0314065bc139b49c5f246b95698055cce305ef8e9e34d653094522548c1
          #     pullPolicy: Always
          #   command: ["/bin/sh", "-c", "python3 /app/worker_llm_requests.py"]
          #   env:
          #     GROQ_API_KEY: ${GROQ_API_KEY_LLM}
          #     GROQ_API_KEY_LLM: ${GROQ_API_KEY_LLM}
          #     GROQ_MODEL: llama3-70b-8192
          #     PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.42:5432/sensei-stage
          #     DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
          #     OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
          #     ENVIRONMENT: stage
          #     REDIS_HOST: dragonfly.database.svc.cluster.local
          #     REDIS_DB: 0
          worker-game-imports:
            image:
              repository: ghcr.io/clarknova99/project-sensei/backend
              tag: stage-latest@sha256:02c0e1611b6ae18b8c9dc31e50c3e72654d4d8f3aa70ed5fed254953e3f42e29
              pullPolicy: Always
            command: ["/bin/sh", "-c", "python3 /app/worker_game_import.py"]
            env:
              GROQ_API_KEY: ${GROQ_API_KEY_LLM}
              GROQ_API_KEY_LLM: ${GROQ_API_KEY_LLM}
              GROQ_MODEL: llama3-70b-8192
              PG_URI: postgresql://${SECRET_SENSEI_USERNAME}:${SECRET_SENSEI_PASSWORD}@192.168.3.42:5432/sensei-stage
              DISCORD_WEBHOOK: ${SECRET_SENSE_DISCORD_WEBHOOK}
              OPENAI_API_KEY: ${SECRET_OPENAPI_KEY}
              ENVIRONMENT: stage
              REDIS_HOST: dragonfly.database.svc.cluster.local
              REDIS_DB: 0
          worker-pgn-to-text:
            image:
              tag: stage-latest@sha256:02c0e1611b6ae18b8c9dc31e50c3e72654d4d8f3aa70ed5fed254953e3f42e29
          worker-llm-requests:
            image:
              tag: stage-latest@sha256:02c0e1611b6ae18b8c9dc31e50c3e72654d4d8f3aa70ed5fed254953e3f42e29
        pod:
          # imagePullPolicy: Always
          imagePullSecrets:
            - name: sensei-secret
    service:
      app:
        controller: sensei-stage-api
        ports:
          http:
            port: 3001
    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN_TWO}"
          hajimari.io/enable: "true"
          hajimari.io/icon: mdi:math-compass
        className: external
        hosts:
          - host: stageapi.${SECRET_DOMAIN_TWO}
            paths:
              - path: /
                service:
                  identifier: app
                  port: 3001
        tls:
          - hosts:
              - stageapi.${SECRET_DOMAIN_TWO}
