---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: openreplay
  namespace: sensei
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
      interval: 15m
  maxHistory: 3
  install:
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      openreplay:
        replicas: 1
        containers:
          kafka:
            image:
              repository: bitnami/kafka
              tag: 3.9.0
            env:
              KAFKA_BROKER_ID: 1
              KAFKA_CFG_ZOOKEEPER_CONNECT: openreplay-zookeeper.sensei.svc.cluster.local:2181
              KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
              KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://openreplay-kafka.sensei.svc.cluster.local:9092
              ALLOW_PLAINTEXT_LISTENER: "yes"            
              
          zookeeper:
            image:
              repository: bitnami/zookeeper
              tag: 3.9.3
            env:
              ALLOW_ANONYMOUS_LOGIN: "yes"
              ZOO_ADMINSERVER_ENABLED: "false"

          openreplay-api:
            image:
              repository: clarknova9/http
              tag: v1.0.0
            env:
              POSTGRES_STRING: postgres://${SECRET_PGADMIN_USER}:${SECRET_PGADMIN_PASSWORD}@postgres16-rw.database.svc.cluster.local:5432/openreplay
              REDIS_STRING: redis://dragonfly.database.svc.cluster.local:6379/1
              MINIO_ENDPOINT: http://minio.kube-system.svc.cluster.local:9000
              MINIO_ACCESS_KEY: ${SECRET_MINIO_ACCESS_KEY}
              MINIO_SECRET_KEY: ${SECRET_MINIO_SECRET_KEY}
              AWS_ACCESS_KEY_ID: ${SECRET_MINIO_ACCESS_KEY}
              AWS_SECRET_ACCESS_KEY: ${SECRET_MINIO_SECRET_KEY}
              AWS_REGION: us-east-1
              KAFKA_SERVERS: openreplay-kafka.sensei.svc.cluster.local:9092
              KAFKA_USE_SSL: 'false'
              WS_ENDPOINT: wss://openreplay.${SECRET_DOMAIN_TWO}/ws
              TOKEN_STRING: 16cb917b3050056c4ca71338a907df63ad6d2530e54dd5240e1d1461c8d9766cf713494876f4
              TOKEN_SECRET: a3f7f13f53473c286f6c14539ea443524f65a0394ba8594ea9cc99cb2b3689bed8a48ceae452
              BUCKET_NAME: uxtesting-records

          # openreplay-frontend:
          #   image:
          #     repository: clarknova9/frontend
          #     tag: v1.0.0
          #   env:
          #     POSTGRES_URL: postgres://${SECRET_PGADMIN_USER}:${SECRET_PGADMIN_PASSWORD}@postgres16-rw.database.svc.cluster.local:5432/openreplay
          #     POSTGRES_STRING: postgres://${SECRET_PGADMIN_USER}:${SECRET_PGADMIN_PASSWORD}@postgres16-rw.database.svc.cluster.local:5432/openreplay
          #     REDIS_STRING: redis://dragonfly.database.svc.cluster.local:6379
          #     MINIO_ENDPOINT: http://minio.kube-system.svc.cluster.local:9000
          #     MINIO_ACCESS_KEY: ${SECRET_MINIO_ACCESS_KEY}
          #     MINIO_SECRET_KEY: ${SECRET_MINIO_SECRET_KEY}
          #     KAFKA_URL: kafka.sensei.svc.cluster.local:9092
          #     API_URL: https://api.openreplay.${SECRET_DOMAIN_TWO}
          #     TOKEN_STRING: 16cb917b3050056c4ca71338a907df63ad6d2530e54dd5240e1d1461c8d9766cf713494876f4

          # openreplay-storage:
          #   image:
          #     repository: clarknova9/storage
          #     tag: v1.0.0
          #   env:
          #     POSTGRES_URL: postgres://${SECRET_PGADMIN_USER}:${SECRET_PGADMIN_PASSWORD}@postgres16-rw.database.svc.cluster.local:5432/openreplay
          #     POSTGRES_STRING: postgres://${SECRET_PGADMIN_USER}:${SECRET_PGADMIN_PASSWORD}@postgres16-rw.database.svc.cluster.local:5432/openreplay
          #     KAFKA_URL: kafka.sensei.svc.cluster.local:9092
          #     TOKEN_STRING: 16cb917b3050056c4ca71338a907df63ad6d2530e54dd5240e1d1461c8d9766cf713494876f4
          #     AWS_REGION: us-east-1
          #     AWS_ENDPOINT: http://minio.kube-system.svc.cluster.local:9000
          #     AWS_ACCESS_KEY_ID: ${SECRET_MINIO_ACCESS_KEY}
          #     AWS_SECRET_ACCESS_KEY: ${SECRET_MINIO_SECRET_KEY}


          # openreplay-sink:
          #   image:
          #     repository: clarknova9/sink
          #     tag: v1.0.0
          #   env:
          #     POSTGRES_URL: postgres://${SECRET_PGADMIN_USER}:${SECRET_PGADMIN_PASSWORD}@postgres16-rw.database.svc.cluster.local:5432/openreplay
          #     POSTGRES_STRING: postgres://${SECRET_PGADMIN_USER}:${SECRET_PGADMIN_PASSWORD}@postgres16-rw.database.svc.cluster.local:5432/openreplay
          #     REDIS_STRING: redis://dragonfly.database.svc.cluster.local:6379
          #     MINIO_ENDPOINT: http://minio.kube-system.svc.cluster.local:9000
          #     MINIO_ACCESS_KEY: ${SECRET_MINIO_ACCESS_KEY}
          #     MINIO_SECRET_KEY: ${SECRET_MINIO_SECRET_KEY}
          #     KAFKA_URL: kafka.sensei.svc.cluster.local:9092
          #     TOKEN_STRING: 16cb917b3050056c4ca71338a907df63ad6d2530e54dd5240e1d1461c8d9766cf713494876f4
          #     KAFKA_SERVERS: kafka.db.svc.cluster.local:9092
          #     KAFKA_USE_SSL: 'false'



          # openreplay-spot:
          #   image:
          #     repository: clarknova9/spot
          #     tag: v1.0.0
          #   env:
          #     KAFKA_URL: kafka.sensei.svc.cluster.local:9092         
          #     TOKEN_STRING: 16cb917b3050056c4ca71338a907df63ad6d2530e54dd5240e1d1461c8d9766cf713494876f4

          # openreplay-assets:
          #   image:
          #     repository: clarknova9/assets
          #     tag: v1.0.0
          #   env:
          #     MINIO_ENDPOINT: http://minio.kube-system.svc.cluster.local:9000
          #     MINIO_ACCESS_KEY: ${SECRET_MINIO_ACCESS_KEY}
          #     MINIO_SECRET_KEY: ${SECRET_MINIO_SECRET_KEY}           
          #     TOKEN_STRING: 16cb917b3050056c4ca71338a907df63ad6d2530e54dd5240e1d1461c8d9766cf713494876f4


          # openreplay-heuristics:
          #   image:
          #     repository: clarknova9/heuristics
          #     tag: v1.0.0
          #   env:
          #     POSTGRES_URL: postgres://${SECRET_PGADMIN_USER}:${SECRET_PGADMIN_PASSWORD}@postgres16-rw.database.svc.cluster.local:5432/openreplay
          #     POSTGRES_STRING: postgres://${SECRET_PGADMIN_USER}:${SECRET_PGADMIN_PASSWORD}@postgres16-rw.database.svc.cluster.local:5432/openreplay
          #     KAFKA_URL: kafka.sensei.svc.cluster.local:9092     
          #     TOKEN_STRING: 16cb917b3050056c4ca71338a907df63ad6d2530e54dd5240e1d1461c8d9766cf713494876f4

          # openreplay-ender:
          #   image:
          #     repository: clarknova9/ender
          #     tag: v1.0.0
          #   env:
          #     KAFKA_URL: kafka.sensei.svc.cluster.local:9092
          #     TOKEN_STRING: 16cb917b3050056c4ca71338a907df63ad6d2530e54dd5240e1d1461c8d9766cf713494876f4
    service:
      kafka:
        controller: openreplay
        ports:
          http:
            port: 9092
      zookeeper:
        controller: openreplay
        ports:
          http:
            port: 2181  
      openreplay-api:
        controller: openreplay
        ports:
          http:
            port: 8090    
      # openreplay-sink:
      #   controller: openreplay
      #   ports:
      #     http:
      #       port: 9000              
      # openreplay-frontend:
      #   controller: openreplay
      #   ports:
      #     http:
      #       port: 8080
        
      # openreplay-heuristics:
      #   controller: openreplay
      #   ports:
      #     http:
      #       port: 9004
      # openreplay-ender:
      #   controller: openreplay
      #   ports:
      #     http:
      #       port: 9005                                 
    # ingress:
    #   app:
    #     annotations:
    #       external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN_TWO}"
    #       nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    #       nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    #       nginx.ingress.kubernetes.io/websocket-services: "openreplay-frontend"          
    #       hajimari.io/enable: "true"
    #       hajimari.io/icon: mdi:math-compass
    #     className: external
    #     enabled: true
    #     hosts:
    #       - host: openreplay.${SECRET_DOMAIN_TWO}
    #         paths:
    #           - path: /
    #             service:
    #               identifier: openreplay-frontend
    #               port: 8080
    #           - path: /ws
    #             service:
    #               identifier: openreplay-frontend
    #               port: 8080    
    #       - host: api.openreplay.${SECRET_DOMAIN_TWO}
    #         paths:
    #           - path: /
    #             service:
    #               identifier: openreplay-api
    #               port: 8080                                                 
    #     tls:
    #       - hosts:
    #           - openreplay.${SECRET_DOMAIN_TWO}
    #           - api.openreplay.${SECRET_DOMAIN_TWO}
